generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PortalConfig {
  id                String   @id @default(cuid()) // There should only be one row in this table.
  nameKey           String
  defaultLanguage   Language @relation(fields: [defaultLanguageId], references: [id])
  defaultLanguageId String   @unique

  adminMeasurementUnits         MeasurementUnits @default(Metric)
  clientDefaultMeasurementUnits MeasurementUnits @default(Metric)

  maxDesignWidthMm  Float
  maxDesignHeightMm Float
}

enum MeasurementUnits {
  Metric
  Imperial
}

model Language {
  id                      String                @id @default(cuid())
  nameKey                 String
  defaultLanguageInPortal PortalConfig?
  materialDescriptions    MaterialDescription[]
  translations            Json
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model User {
  id   String @id @default(cuid())
  name String?

  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  preferredMeasurementUnits MeasurementUnits @default(Metric)

  designs     Design[]
  basketItems BasketItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model DiscountBreak {
  id                 String @id @default(cuid())
  minQty             Int
  discountAmount     Int?
  discountPercentage Float?
}

model BasketItem {
  id       String @id @default(cuid())
  quantity Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String
  design   Design @relation(fields: [designId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  designId String
}

model Design {
  id String @id @default(cuid())

  name                String
  originalFilePath    String
  originalSvgFilePath String

  processingSvgFilePath String?
  user                  User?        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId                String?
  basketItems           BasketItem[]
}

model Material {
  id      String @id @default(cuid())
  nameKey String

  materialsCategory   MaterialsCategory?    @relation(fields: [materialsCategoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  materialsCategoryId String?
  materialDescription MaterialDescription[]

  materialUsageMethod MaterialUsageMethod

  thicknesses MaterialThickness[]
  sizes       MaterialSize[]

  scoreable          Boolean
  scoringSpeedMmPerS Float

  engraveable          Boolean
  engravingSpeedMmPerS Float
}

enum MaterialUsageMethod {
  SheetSize
  PartSize
}

model MaterialsCategory {
  id       String     @id @default(cuid())
  nameKey  String
  material Material[]
}

model MaterialSize {
  id         String   @id @default(cuid())
  material   Material @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  materialId String
  widthMm    Float
  heightMm   Float
}

model MaterialThickness {
  id         String   @id @default(cuid())
  nameKey    String
  material   Material @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  materialId String

  thicknessMm Float

  cuttable           Boolean
  cuttingSpeedMmPerS Float

  pricePerM2 Float
}

model MaterialDescription {
  id         String   @id @default(cuid())
  language   Language @relation(fields: [languageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  languageId String
  material   Material @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  materialId String
}
